You are given an integer array bloomDay, an integer m and an integer k.You want to make m bouquets. To make a bouquet, you need to use k adjacent flowers from the garden.
The garden consists of n flowers, the ith flower will bloom in the bloomDay[i] and then can be used in exactly one bouquet.Return the minimum number of days you need to wait to be able to make m bouquets from the garden. 
If it is impossible to make m bouquets return -1.

def bouq(self,bloomday:List[int],k:int,m;int)->int:
  if m*k > len(bloomday):
    return -1
  l,r=1,max(bloomday)
  ans=-1
  while l<r:
    mid=(l+r)//2
    bouquet=0
    length=0
    for day in bloomday:
      if day<=mid:
        length+=1
        if length>=k:
          bouquet+=1
          length=0
      else:
        length=0
    if bouquet>=m:
      ans=mid
      r=mid-1
    else:
      l=mid+1
  return ans
