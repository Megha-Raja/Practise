Given an integer k and a queue of integers, we need to reverse the order of the first k elements of the queue, leaving the other elements in the same relative order.

Only following standard operations are allowed on queue.

enqueue(x) : Add an item x to rear of queue
dequeue() : Remove an item from front of queue
size() : Returns number of elements in queue.
front() : Finds front item.

from collections import deque
'''
Function Arguments :
        @param  : q ( given queue to be used), k(Integer )
        @return : list, just reverse the first k elements of queue and return new queue
'''

#Function to reverse first k elements of a queue.
class Solution:
    def modifyQueue(self, q, k):
        stack=[]
        n=len(q)-k
        while k:
            stack.append(q.popleft())
            k-=1
        while stack:
            q.append(stack.pop())
        while n:
            q.append(q.popleft())
            n-=1
        return q
