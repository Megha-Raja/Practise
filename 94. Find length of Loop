Given the head of a linked list, determine whether the list contains a loop. If a loop is present, return the number of nodes in the loop, otherwise return 0.

class Solution:
    def count_nodes(self,node):
        count = 1
        curr = node
        while curr.next != node:
            count += 1
            curr = curr.next
        return count

    def countNodesInLoop(self,head):
        slow = head
        fast = head

        while slow and fast and fast.next:
            slow = slow.next
            fast = fast.next.next
            if slow == fast:
                return self.count_nodes(slow)
        return 0
