Given the head a linked list, the task is to reverse every k node in the linked list. If the number of nodes is not a multiple of k then the left-out nodes in the end, 
should be considered as a group and must be reversed.

class Solution:
    def reverseKGroup(self, head, k):
        stk=[]
        result=Node(0)
        ptr=result
        while head!=None:
            for i in range(k):
                stk.append(head.data)
                head=head.next
                if head==None:
                    break
            for i in range(k):
                ptr.next=Node(stk.pop())
                ptr=ptr.next
                if stk==[]:
                    break
        return result.next
