Given an increasing sorted rotated array arr of distinct integers. The array is right-rotated k times. Find the value of k.
Let's suppose we have an array arr = [2, 4, 6, 9], so if we rotate it by 2 times so that it will look like this:
After 1st Rotation : [9, 2, 4, 6]
After 2nd Rotation : [6, 9, 2, 4]

def kthrotation(self,arr):
  n=len(arr)
  lo=0
  hi=n-1
  while lo<=hi:
    mid=(lo+hi)//2
    if mid!=high and arr[mid]>arr[mid+1]:
      return mid+1
    elif mid!=0 and arr[mid-1]>arr[mid]:
      return mid
    elif arr[mid]<=arr[high]:
      high=mid-1
    else:
      low=mid+1
  return 0
