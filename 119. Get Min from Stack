Given q queries, You task is to implement the following four functions for a stack:
push(x) – Insert an integer x onto the stack.
pop() – Remove the top element from the stack.
peek() - Return the top element from the stack. If the stack is empty, return -1.
getMin() – Retrieve the minimum element from the stack in O(1) time. If the stack is empty, return -1.
Each query can be one of the following:
1 x : Push x onto the stack.
2 : Pop the top element from the stack.
3: Return the top element from the stack. If the stack is empty, return -1.
4: Return the minimum element from the stack.

class Solution:

    def __init__(self):
        # code here
        self.st = []
        self.min_st = []
    # Add an element to the top of Stack
    def push(self, x):
        # code here
        self.st.append(x)
        if not self.min_st or x<=self.min_st[-1]:
            self.min_st.append(x)
    def pop(self):
        # code here
        if not self.st:
            return
        val = self.st.pop()
        if val == self.min_st[-1]:
            self.min_st.pop()
    def peek(self):
        if self.st:
            return self.st[-1]
        else:
            return -1
    def getMin(self):
        if not self.min_st:
            return -1
        else:
            return self.min_st[-1]

